{"mappings":"kBAAMA,EACS,8CASFC,EACE,cCXRC,eAAAC,EAAyBC,EAAaC,OACvCC,QAAiBC,MAAMF,MACtBC,EAASE,UAGNC,QAAaH,EAASI,cAC5BC,eAAeC,QAAQR,EAAKS,KAAKC,UAAUL,IACpCA,YAJGM,MAAAA,uBAA6BT,EAASU,UCH7C,SAAAC,EACLR,SAEMS,EAAsBT,EAAKU,YAAYC,QACEC,SAASC,iBACtD,SAGGC,SAASC,OACRA,EAASC,cAAAA,OACLC,EAAQF,EAASC,cAAcE,uBAEjCT,IAAwBM,EAASI,IAC/BF,GACFA,EAAMG,SAAS,GAAGC,UAAUC,IAAI,2BCGtCC,EAZJC,OAAOC,iBAAiB,QAAQ,WACxBC,EAASd,SAASe,cAAc,qBAClCD,IACFA,EAAOE,WAAa,cCJM,EAACjC,EAAaC,WAEpCiC,EAAgDC,UAC9CC,EAAgBD,EAASE,iBACzBC,EAAMrB,SAASC,iBACnB,SAEIqB,EAAMtB,SAASC,iBACnB,UAEIsB,EAAUvB,SAASC,iBACvB,QAEIuB,EAAUxB,SAASC,iBACvB,QAEIwB,EAAkBzB,SAASe,cAC/B,oBAGFW,aAAY,WACJC,GAAAA,IAAYC,MAAOC,aAErBV,EAAgBQ,EAAAA,OACZG,EAAgBX,EAAgBQ,MAElCI,EAAMC,KAAKC,MAAMH,EAAgB,KACjCI,EAAMF,KAAKC,MAAMF,EAAM,IACvBI,EAAQH,KAAKC,MAAMC,EAAM,IACzBE,EAAOJ,KAAKC,MAAME,EAAQ,IAE9BA,GAAS,GACTD,GAAO,GACPH,GAAO,GAEPV,EAAInB,SAASmC,GAAQA,EAAGC,UAAAA,GAAeF,MACvCd,EAAIpB,SACDmC,GAAQA,EAAGC,UAAAA,GAAeH,EAAQ,GAAK,IAAM,MAAMA,MAEtDZ,EAAQrB,SACLmC,GAAQA,EAAGC,UAAAA,GAAeJ,EAAM,GAAK,IAAM,MAAMA,MAEpDV,EAAQtB,SACLmC,GAAQA,EAAGC,UAAAA,GAAeP,EAAM,GAAK,IAAM,MAAMA,WAGpDV,EAAInB,SAASmC,GAAQA,EAAGE,YAAc,OACtCjB,EAAIpB,SAASmC,GAAQA,EAAGE,YAAc,OACtChB,EAAQrB,SAASmC,GAAQA,EAAGE,YAAc,OAC1Cf,EAAQtB,SAASmC,GAAQA,EAAGE,YAAc,OAC1Cd,EAAgBc,YAAc,qBAE/B,MAECC,EAAQlD,eAAemD,QAAQ1D,GAChCyD,GAQHvB,EAAezB,KAAKkD,MAAMF,MACNhD,KAAKkD,MAAMF,OARrBzD,EAAKC,GACZ2D,MAAMvD,IACL6B,EAAe7B,KACKA,MAErBwD,OAAOC,GAAMC,QAAQC,IAAIF,SDrDTG,GEGE,MAMvB,SAAAC,EAAiBC,GACAA,EAAMC,cACd1C,UAAU2C,OAAO,UAPLpD,SAASC,iBAAiB,kBAClCC,SAASmD,IACpBA,EAAOxC,iBAAiB,QAASoC,UAjBjB,YACZK,EAAYtD,SAASe,cAAc,cACnCwC,EAAOvD,SAASe,cAAc,SAEpCuC,EAAUzC,iBAAiB,SAE3B,SAAoBqC,GACHA,EAAMC,cACd1C,UAAU2C,OAAO,QACxBG,EAAK9C,UAAU2C,OAAO,yBFQpBI,EAAwClE,eAAemD,QAAAA,GAgB7D,SAAAgB,EAAyDrE,SACjDsE,EAAsB1D,SAASe,cACnC,gBAEI4C,EAAiB3D,SAASe,cAC9B,qCAGE6C,EAAAA,IAAiBhC,KAAKxC,EAAKyE,mBAC3BC,EAAOF,EAAWG,UAClBC,EAAyBJ,EAAWK,WAAa,EACrDD,EAAQA,EAAQ,GAAKA,EAAME,WAAa,IAAMF,QAExCrC,GAAAA,IAAYC,MAAOC,UAEzB6B,EAAoBpB,UAAAA,eACfX,EAAQiC,EAAW/B,UAAY,mBAAqB,2CACpCzC,EAAK+E,6CACJH,KAASF,mBAG/BH,EAAerB,UAAAA,+FAGSlD,EAAKgF,OAAOC,0HAKZjF,EAAKU,YAAYwE,oIAKLlF,EAAKmF,iCAGnCC,EAAiCxE,SAASe,cAAc,YAC1DyD,IACFA,EAAkBlC,UAAAA,kEAA8ElD,EAAKqF,gBAnDpGjB,GAOH7C,EAAanB,KAAKkD,MAAMc,GACxBC,EAAkB9C,QAPAqC,GACfL,MAAMvD,IACLqE,EAAkBrE,MAEnBwD,OAAOC,GAAMC,QAAQC,IAAIF","sources":["./src/ts/config.ts","./src/ts/fetchData.ts","./src/ts/currentSiteLocation.ts","./src/ts/home.ts","./src/ts/countdown.ts","./src/ts/script.ts"],"sourcesContent":["const endpoints: IEndpoints = {\n  NEXT_LAUNCH: 'https://api.spacexdata.com/v3/launches/next',\n  UPCOMING_LAUNCH: 'https://api.spacexdata.com/v3/launches/upcoming',\n  PREVIOUS_LAUNCH: 'https://api.spacexdata.com/v3/launches/past',\n  PAD_LOCATIONS: 'https://api.spacexdata.com/v3/launchpads',\n  ROCKETS: 'https://api.spacexdata.com/v3/rockets',\n};\n\nexport default endpoints;\n\nexport const storage: IEndpoints = {\n  NEXT_LAUNCH: 'NEXT_LAUNCH',\n  UPCOMING_LAUNCH: 'UPCOMING_LAUNCH',\n  PREVIOUS_LAUNCH: 'PREVIOUS_LAUNCH',\n  PAD_LOCATIONS: 'PAD_LOCATIONS',\n  ROCKETS: 'ROCKETS',\n};\n","export async function fetchData(key: string, url: string): Promise<object[]> {\n  let response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  } else {\n    const data = await response.json();\n    sessionStorage.setItem(key, JSON.stringify(data));\n    return data;\n  }\n}\n","export function currentSiteLocation<T extends IObjectFromApiCall>(\n  data: T\n): void {\n  const siteLocationFromApi = data.launch_site.site_id;\n  const area: NodeListOf<HTMLParagraphElement> = document.querySelectorAll(\n    '.area'\n  );\n\n  area.forEach((location) => {\n    if (location.parentElement) {\n      const title = location.parentElement.previousElementSibling;\n\n      if (siteLocationFromApi === location.id) {\n        if (title) {\n          title.children[0].classList.add('active-location');\n        }\n      }\n    }\n  });\n}\n","import { accordion, menu } from './script';\nimport endpoints, { storage } from './config';\nimport { countDownTimer } from './countdown';\nimport { fetchData } from './fetchData';\n\nwindow.addEventListener('load', () => {\n  const loader = document.querySelector('.loader-container');\n  if (loader) {\n    loader.className += ' hidden';\n  }\n});\n\ncountDownTimer(storage.NEXT_LAUNCH, endpoints.NEXT_LAUNCH);\naccordion();\nmenu();\n\n/*fetch*/\nlet nextLaunch: object;\nconst dataFromSessionStorage: string | null = sessionStorage.getItem(\n  storage.NEXT_LAUNCH\n);\n\nif (!dataFromSessionStorage) {\n  fetchData(storage.NEXT_LAUNCH, endpoints.NEXT_LAUNCH)\n    .then((data) => {\n      displayNextLaunch(data);\n    })\n    .catch((e) => console.log(e));\n} else {\n  nextLaunch = JSON.parse(dataFromSessionStorage);\n  displayNextLaunch(nextLaunch);\n}\n\n// DOM interaction\nfunction displayNextLaunch<T extends IObjectFromApiCall>(data: T): void {\n  const nextLaunchContainer = document.querySelector(\n    '.next-launch'\n  ) as HTMLDivElement;\n  const nextLaunchInfo = document.querySelector(\n    '.next-launch-info__first-part'\n  ) as HTMLDivElement;\n\n  let launchDate = new Date(data.launch_date_local);\n  let date = launchDate.getDate();\n  let month: number | string = launchDate.getMonth() + 1;\n  month = month < 10 ? month.toString() + '0' : month;\n\n  const today = new Date().getTime();\n\n  nextLaunchContainer.innerHTML = `<div>\n  <p>${today > launchDate.getTime() ? 'Last Launch Was:' : 'Next Launch'}</p>\n  <span class=\"year\">${data.launch_year}</span>\n  <span class=\"month\">${month}/${date}</span>\n</div>`;\n\n  nextLaunchInfo.innerHTML = `\n<div class=\"info-container\">\n  <p class=\"info__name\">Rocket</p>\n  <p class=\"info__text\">${data.rocket.rocket_name}</p>\n</div>\n\n<div class=\"info-container\">\n  <p class=\"info__name\">Location</p>\n  <p class=\"info__text\">${data.launch_site.site_name}</p>\n</div>\n\n<div class=\"info-container\">\n  <p class=\" info__name\">Mission</p>\n  <p class=\"info__text highlighted\">${data.mission_name}</p>\n</div>`;\n\n  const nextLaunchDetails = <HTMLElement>document.querySelector('.details');\n  if (nextLaunchDetails) {\n    nextLaunchDetails.innerHTML = ` <div class=\"accordion-item-content\"><p class=\"info__text\"></p>${data.details}</div`;\n  }\n}\n","import { fetchData } from './fetchData';\nimport { currentSiteLocation } from './currentSiteLocation';\n\n// Writes to the DOM\nexport const countDownTimer = (key: string, url: string) => {\n  // Typescript generic type\n  const updateEverySec = <T extends IObjectFromApiCall>(nextDate: T): void => {\n    const countDownDate = nextDate.launch_date_unix;\n    const day = document.querySelectorAll(\n      '.days'\n    ) as NodeListOf<HTMLSpanElement>;\n    const hrs = document.querySelectorAll(\n      '.hours'\n    ) as NodeListOf<HTMLSpanElement>;\n    const minutes = document.querySelectorAll(\n      '.min'\n    ) as NodeListOf<HTMLSpanElement>;\n    const seconds = document.querySelectorAll(\n      '.sec'\n    ) as NodeListOf<HTMLSpanElement>;\n    const nextLanunchText = document.querySelector(\n      '.inner-counter p'\n    ) as HTMLParagraphElement;\n\n    setInterval(() => {\n      const today = new Date().getTime();\n\n      if (countDownDate > today) {\n        const timeRemaining = countDownDate - today;\n\n        let sec = Math.floor(timeRemaining / 1000);\n        let min = Math.floor(sec / 60);\n        let hours = Math.floor(min / 60);\n        let days = Math.floor(hours / 24);\n\n        hours %= 24;\n        min %= 60;\n        sec %= 60;\n\n        day.forEach((el) => (el.innerHTML = `${days}`));\n        hrs.forEach(\n          (el) => (el.innerHTML = `${hours < 10 ? '0' : ''} ${hours}`)\n        );\n        minutes.forEach(\n          (el) => (el.innerHTML = `${min < 10 ? '0' : ''} ${min}`)\n        );\n        seconds.forEach(\n          (el) => (el.innerHTML = `${sec < 10 ? '0' : ''} ${sec}`)\n        );\n      } else {\n        day.forEach((el) => (el.textContent = '00'));\n        hrs.forEach((el) => (el.textContent = '00'));\n        minutes.forEach((el) => (el.textContent = '00'));\n        seconds.forEach((el) => (el.textContent = '00'));\n        nextLanunchText.textContent = 'Launch has ended';\n      }\n    }, 1000);\n  };\n  const timer = sessionStorage.getItem(key);\n  if (!timer) {\n    fetchData(key, url)\n      .then((data) => {\n        updateEverySec(data);\n        currentSiteLocation(data);\n      })\n      .catch((e) => console.log(e));\n  } else {\n    updateEverySec(JSON.parse(timer));\n    currentSiteLocation(JSON.parse(timer));\n  }\n};\n","/*Mobile Navigation*/\nexport const menu = () => {\n  const hamburger = document.querySelector('.hamburger') as HTMLDivElement;\n  const menu = document.querySelector('.menu') as HTMLDivElement;\n\n  hamburger.addEventListener('click', toggleMenu);\n\n  function toggleMenu(event: Event): void {\n    const target = event.currentTarget as HTMLElement;\n    target.classList.toggle('open');\n    menu.classList.toggle('dropdown');\n  }\n};\n\n/*Accordion*/\nexport const accordion = (): void => {\n  const accordionBtn = document.querySelectorAll('.accordion_btn');\n  accordionBtn.forEach((button) => {\n    button.addEventListener('click', openTab);\n  });\n\n  function openTab(event: Event): void {\n    const target = event.currentTarget as HTMLElement;\n    target.classList.toggle('active');\n  }\n};\n"],"names":["$69cb11dadbbbc9f7d1449520a6679e55$export$default","$69cb11dadbbbc9f7d1449520a6679e55$export$storage","async","$4eac2c99294ebc5c1f6344e18d17ff7e$export$fetchData","key","url","response","fetch","ok","data","json","sessionStorage","setItem","JSON","stringify","Error","status","$d0e410a6ac418c51e2cd758121ca92ef$export$currentSiteLocation","siteLocationFromApi","launch_site","site_id","document","querySelectorAll","forEach","location","parentElement","title","previousElementSibling","id","children","classList","add","$ac42bc4be4eed283160050af3161d53b$var$nextLaunch","window","addEventListener","loader","querySelector","className","updateEverySec","nextDate","countDownDate","launch_date_unix","day","hrs","minutes","seconds","nextLanunchText","setInterval","today","Date","getTime","timeRemaining","sec","Math","floor","min","hours","days","el","innerHTML","textContent","timer","getItem","parse","then","catch","e","console","log","NEXT_LAUNCH","openTab","event","currentTarget","toggle","button","hamburger","menu","$ac42bc4be4eed283160050af3161d53b$var$dataFromSessionStorage","$ac42bc4be4eed283160050af3161d53b$var$displayNextLaunch","nextLaunchContainer","nextLaunchInfo","launchDate","launch_date_local","date","getDate","month","getMonth","toString","launch_year","rocket","rocket_name","site_name","mission_name","nextLaunchDetails","details"],"version":3,"file":"index.3b2da398.js.map"}