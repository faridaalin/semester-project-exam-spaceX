{"version":3,"sources":["ts/script.ts","ts/config.ts","ts/fetchData.ts","ts/currentSiteLocation.ts","ts/countdown.ts","ts/about.ts"],"names":[],"mappings":"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","file":"about.a0ef4539.js","sourceRoot":"../src","sourcesContent":["/*Mobile Navigation*/\nexport const menu = () => {\n  const hamburger = document.querySelector('.hamburger') as HTMLDivElement;\n  const menu = document.querySelector('.menu') as HTMLDivElement;\n\n  hamburger.addEventListener('click', toggleMenu);\n\n  function toggleMenu(event: Event): void {\n    const target = event.currentTarget as HTMLElement;\n    target.classList.toggle('open');\n    menu.classList.toggle('dropdown');\n  }\n};\n\n/*Accordion*/\nexport const accordion = (): void => {\n  const accordionBtn = document.querySelectorAll('.accordion_btn');\n  accordionBtn.forEach((button) => {\n    button.addEventListener('click', openTab);\n  });\n\n  function openTab(event: Event): void {\n    const target = event.currentTarget as HTMLElement;\n    target.classList.toggle('active');\n  }\n};\n","const endpoints: IEndpoints = {\n  NEXT_LAUNCH: 'https://api.spacexdata.com/v3/launches/next',\n  UPCOMING_LAUNCH: 'https://api.spacexdata.com/v3/launches/upcoming',\n  PREVIOUS_LAUNCH: 'https://api.spacexdata.com/v3/launches/past',\n  PAD_LOCATIONS: 'https://api.spacexdata.com/v3/launchpads',\n  ROCKETS: 'https://api.spacexdata.com/v3/rockets',\n};\n\nexport default endpoints;\n\nexport const storage: IEndpoints = {\n  NEXT_LAUNCH: 'NEXT_LAUNCH',\n  UPCOMING_LAUNCH: 'UPCOMING_LAUNCH',\n  PREVIOUS_LAUNCH: 'PREVIOUS_LAUNCH',\n  PAD_LOCATIONS: 'PAD_LOCATIONS',\n  ROCKETS: 'ROCKETS',\n};\n","export async function fetchData(key: string, url: string): Promise<object[]> {\n  let response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  } else {\n    const data = await response.json();\n    sessionStorage.setItem(key, JSON.stringify(data));\n    return data;\n  }\n}\n","export function currentSiteLocation<T extends IObjectFromApiCall>(\n  data: T\n): void {\n  const siteLocationFromApi = data.launch_site.site_id;\n  const area: NodeListOf<HTMLParagraphElement> = document.querySelectorAll(\n    '.area'\n  );\n\n  area.forEach((location) => {\n    if (location.parentElement) {\n      const title = location.parentElement.previousElementSibling;\n\n      if (siteLocationFromApi === location.id) {\n        if (title) {\n          title.children[0].classList.add('active-location');\n        }\n      }\n    }\n  });\n}\n","import { fetchData } from './fetchData';\nimport { currentSiteLocation } from './currentSiteLocation';\n\n// Writes to the DOM\nexport const countDownTimer = (key: string, url: string) => {\n  // Typescript generic type\n  const updateEverySec = <T extends IObjectFromApiCall>(nextDate: T): void => {\n    const countDownDate = nextDate.launch_date_unix;\n    const day = document.querySelectorAll(\n      '.days'\n    ) as NodeListOf<HTMLSpanElement>;\n    const hrs = document.querySelectorAll(\n      '.hours'\n    ) as NodeListOf<HTMLSpanElement>;\n    const minutes = document.querySelectorAll(\n      '.min'\n    ) as NodeListOf<HTMLSpanElement>;\n    const seconds = document.querySelectorAll(\n      '.sec'\n    ) as NodeListOf<HTMLSpanElement>;\n    const nextLanunchText = document.querySelector(\n      '.inner-counter p'\n    ) as HTMLParagraphElement;\n\n    setInterval(() => {\n      const today = new Date().getTime();\n\n      if (countDownDate > today) {\n        const timeRemaining = countDownDate - today;\n\n        let sec = Math.floor(timeRemaining / 1000);\n        let min = Math.floor(sec / 60);\n        let hours = Math.floor(min / 60);\n        let days = Math.floor(hours / 24);\n\n        hours %= 24;\n        min %= 60;\n        sec %= 60;\n\n        day.forEach((el) => (el.innerHTML = `${days}`));\n        hrs.forEach(\n          (el) => (el.innerHTML = `${hours < 10 ? '0' : ''} ${hours}`)\n        );\n        minutes.forEach(\n          (el) => (el.innerHTML = `${min < 10 ? '0' : ''} ${min}`)\n        );\n        seconds.forEach(\n          (el) => (el.innerHTML = `${sec < 10 ? '0' : ''} ${sec}`)\n        );\n      } else {\n        day.forEach((el) => (el.textContent = '00'));\n        hrs.forEach((el) => (el.textContent = '00'));\n        minutes.forEach((el) => (el.textContent = '00'));\n        seconds.forEach((el) => (el.textContent = '00'));\n        nextLanunchText.textContent = 'Launch has ended';\n      }\n    }, 1000);\n  };\n  const timer = sessionStorage.getItem(key);\n  if (!timer) {\n    fetchData(key, url)\n      .then((data) => {\n        updateEverySec(data);\n        currentSiteLocation(data);\n      })\n      .catch((e) => console.log(e));\n  } else {\n    updateEverySec(JSON.parse(timer));\n    currentSiteLocation(JSON.parse(timer));\n  }\n};\n","import { menu } from './script';\nimport endpoints, { storage } from './config';\nimport { countDownTimer } from './countdown';\n\ncountDownTimer(storage.NEXT_LAUNCH, endpoints.NEXT_LAUNCH);\nmenu();\n"]}