{"version":3,"sources":["ts/fetchData.ts","ts/currentSiteLocation.ts","ts/countdown.ts"],"names":[],"mappings":"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","file":"countdown.5f36f913.js","sourceRoot":"../src","sourcesContent":["export async function fetchData(key: string, url: string): Promise<object[]> {\n  let response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  } else {\n    const data = await response.json();\n    sessionStorage.setItem(key, JSON.stringify(data));\n    return data;\n  }\n}\n","export function currentSiteLocation<T extends IObjectFromApiCall>(\n  data: T\n): void {\n  const siteLocationFromApi = data.launch_site.site_id;\n  const area: NodeListOf<HTMLParagraphElement> = document.querySelectorAll(\n    '.area'\n  );\n\n  area.forEach((location) => {\n    if (location.parentElement) {\n      const title = location.parentElement.previousElementSibling;\n\n      if (siteLocationFromApi === location.id) {\n        if (title) {\n          title.children[0].classList.add('active-location');\n        }\n      }\n    }\n  });\n}\n","import { fetchData } from './fetchData';\nimport { currentSiteLocation } from './currentSiteLocation';\n\n// Writes to the DOM\nexport const countDownTimer = (key: string, url: string) => {\n  // Typescript generic type\n  const updateEverySec = <T extends IObjectFromApiCall>(nextDate: T): void => {\n    const countDownDate = nextDate.launch_date_unix;\n    const day = document.querySelectorAll(\n      '.days'\n    ) as NodeListOf<HTMLSpanElement>;\n    const hrs = document.querySelectorAll(\n      '.hours'\n    ) as NodeListOf<HTMLSpanElement>;\n    const minutes = document.querySelectorAll(\n      '.min'\n    ) as NodeListOf<HTMLSpanElement>;\n    const seconds = document.querySelectorAll(\n      '.sec'\n    ) as NodeListOf<HTMLSpanElement>;\n    const nextLanunchText = document.querySelector(\n      '.inner-counter p'\n    ) as HTMLParagraphElement;\n\n    setInterval(() => {\n      const today = new Date().getTime();\n\n      if (countDownDate > today) {\n        const timeRemaining = countDownDate - today;\n\n        let sec = Math.floor(timeRemaining / 1000);\n        let min = Math.floor(sec / 60);\n        let hours = Math.floor(min / 60);\n        let days = Math.floor(hours / 24);\n\n        hours %= 24;\n        min %= 60;\n        sec %= 60;\n\n        day.forEach((el) => (el.innerHTML = `${days}`));\n        hrs.forEach(\n          (el) => (el.innerHTML = `${hours < 10 ? '0' : ''} ${hours}`)\n        );\n        minutes.forEach(\n          (el) => (el.innerHTML = `${min < 10 ? '0' : ''} ${min}`)\n        );\n        seconds.forEach(\n          (el) => (el.innerHTML = `${sec < 10 ? '0' : ''} ${sec}`)\n        );\n      } else {\n        day.forEach((el) => (el.textContent = '00'));\n        hrs.forEach((el) => (el.textContent = '00'));\n        minutes.forEach((el) => (el.textContent = '00'));\n        seconds.forEach((el) => (el.textContent = '00'));\n        nextLanunchText.textContent = 'Launch has ended';\n      }\n    }, 1000);\n  };\n  const timer = sessionStorage.getItem(key);\n  if (!timer) {\n    fetchData(key, url)\n      .then((data) => {\n        updateEverySec(data);\n        currentSiteLocation(data);\n      })\n      .catch((e) => console.log(e));\n  } else {\n    updateEverySec(JSON.parse(timer));\n    currentSiteLocation(JSON.parse(timer));\n  }\n};\n"]}