{"mappings":"gBAAIA,EACoB,oBAAfC,WACHA,WACgB,oBAATC,KACPA,KACkB,oBAAXC,OACPA,OACkB,oBAAXC,OACPA,OAAAA,GAWN,SAAAC,EAAwBC,EAAGC,EAAGC,GAC5BC,OAAOC,eAAeJ,EAAGC,EAAAA,CAAII,IAAKH,EAAGI,YAAY,8BCpB/CC,EAAAA,GACAC,EAAAA,GAEiB,MAAjBC,KACFA,EAAgB,SAASC,MAEnBA,KAAQF,EAAAA,KACNG,EAAUH,EAAgBE,UACvBF,EAAgBE,GACvBC,OAGED,KAAQH,SACHA,EAAgBG,MAKH,oBAAXE,QAAoD,mBAAnBA,OAAOC,eAC1CD,OAAOC,QAAQH,OAGpBI,EAAAA,IAAUC,MAAM,uBAAyBL,EAAO,WACpDI,EAAIE,KAAO,mBACLF,IAGMG,SAAW,SAAkBC,EAAIC,GAC7CZ,EAAgBW,GAAMC,GAGxBV,EAAcW,eAAiB,SAAwBF,EAAIG,GACzDb,EAAgBU,GAAMG,EACtBd,EAAgBW,GAAAA,IAGlBxB,EAAe4B,kBAAqBb,iBCpC/Bc,eAAAC,EAAyBC,EAAaC,OACvCC,QAAiBC,MAAMF,MACtBC,EAASE,UAGNC,QAAaH,EAASI,cAC5BC,eAAeC,QAAQR,EAAKS,KAAKC,UAAUL,IACpCA,YAJGf,MAAAA,uBAA6BY,EAASS,UCH7C,SAAAC,EACLP,SAEMQ,EAAsBR,EAAKS,YAAYC,QACEC,SAASC,iBACtD,SAGGC,SAASC,OACRA,EAASC,cAAAA,OACLC,EAAQF,EAASC,cAAcE,uBAEjCT,IAAwBM,EAAS1B,IAC/B4B,GACFA,EAAME,SAAS,GAAGC,UAAUC,IAAI,qECV7BC,EAAiB,CAAC1B,EAAaC,WAEpC0B,EAAgDC,UAC9CC,EAAgBD,EAASE,iBACzBC,EAAMf,SAASC,iBACnB,SAEIe,EAAMhB,SAASC,iBACnB,UAEIgB,EAAUjB,SAASC,iBACvB,QAEIiB,EAAUlB,SAASC,iBACvB,QAEIkB,EAAkBnB,SAASoB,cAC/B,oBAGFC,aAAY,WACJC,GAAAA,IAAYC,MAAOC,aAErBX,EAAgBS,EAAAA,OACZG,EAAgBZ,EAAgBS,MAElCI,EAAMC,KAAKC,MAAMH,EAAgB,KACjCI,EAAMF,KAAKC,MAAMF,EAAM,IACvBI,EAAQH,KAAKC,MAAMC,EAAM,IACzBE,EAAOJ,KAAKC,MAAME,EAAQ,IAE9BA,GAAS,GACTD,GAAO,GACPH,GAAO,GAEPX,EAAIb,SAAS8B,GAAQA,EAAGC,UAAAA,GAAeF,MACvCf,EAAId,SACD8B,GAAQA,EAAGC,UAAAA,GAAeH,EAAQ,GAAK,IAAM,MAAMA,MAEtDb,EAAQf,SACL8B,GAAQA,EAAGC,UAAAA,GAAeJ,EAAM,GAAK,IAAM,MAAMA,MAEpDX,EAAQhB,SACL8B,GAAQA,EAAGC,UAAAA,GAAeP,EAAM,GAAK,IAAM,MAAMA,WAGpDX,EAAIb,SAAS8B,GAAQA,EAAGE,YAAc,OACtClB,EAAId,SAAS8B,GAAQA,EAAGE,YAAc,OACtCjB,EAAQf,SAAS8B,GAAQA,EAAGE,YAAc,OAC1ChB,EAAQhB,SAAS8B,GAAQA,EAAGE,YAAc,OAC1Cf,EAAgBe,YAAc,qBAE/B,MAECC,EAAQ5C,eAAe6C,QAAQpD,GAChCmD,GAQHxB,EAAelB,KAAK4C,MAAMF,MACN1C,KAAK4C,MAAMF,OARrBnD,EAAKC,GACZqD,MAAMjD,IACLsB,EAAetB,KACKA,MAErBkD,OAAOhF,GAAMiF,QAAQC,IAAIlF","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@parcel/scope-hoisting/lib/prelude.js","./src/ts/fetchData.ts","./src/ts/currentSiteLocation.ts","./src/ts/countdown.ts"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","var $parcel$modules = {};\nvar $parcel$bundles = {};\n\nif (parcelRequire == null) {\n  parcelRequire = function(name) {\n    // Execute the bundle wrapper function if there is one registered.\n    if (name in $parcel$bundles) {\n      let wrapper = $parcel$bundles[name];\n      delete $parcel$bundles[name];\n      wrapper();\n    }\n\n    if (name in $parcel$modules) {\n      return $parcel$modules[name];\n    }\n\n    // Try the node require function if it exists.\n    // Do not use `require` to prevent Webpack from trying to bundle this call\n    if (typeof module !== 'undefined' && typeof module.require === 'function') {\n      return module.require(name);\n    }\n\n    var err = new Error(\"Cannot find module '\" + name + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, exports) {\n    $parcel$modules[id] = exports;\n  };\n\n  parcelRequire.registerBundle = function registerBundle(id, fn) {\n    $parcel$bundles[id] = fn;\n    $parcel$modules[id] = {};\n  };\n\n  $parcel$global[parcelRequireName] = parcelRequire;\n}\n","export async function fetchData(key: string, url: string): Promise<object[]> {\n  let response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  } else {\n    const data = await response.json();\n    sessionStorage.setItem(key, JSON.stringify(data));\n    return data;\n  }\n}\n","export function currentSiteLocation<T extends IObjectFromApiCall>(\n  data: T\n): void {\n  const siteLocationFromApi = data.launch_site.site_id;\n  const area: NodeListOf<HTMLParagraphElement> = document.querySelectorAll(\n    '.area'\n  );\n\n  area.forEach((location) => {\n    if (location.parentElement) {\n      const title = location.parentElement.previousElementSibling;\n\n      if (siteLocationFromApi === location.id) {\n        if (title) {\n          title.children[0].classList.add('active-location');\n        }\n      }\n    }\n  });\n}\n","import { fetchData } from './fetchData';\nimport { currentSiteLocation } from './currentSiteLocation';\n\n// Writes to the DOM\nexport const countDownTimer = (key: string, url: string) => {\n  // Typescript generic type\n  const updateEverySec = <T extends IObjectFromApiCall>(nextDate: T): void => {\n    const countDownDate = nextDate.launch_date_unix;\n    const day = document.querySelectorAll(\n      '.days'\n    ) as NodeListOf<HTMLSpanElement>;\n    const hrs = document.querySelectorAll(\n      '.hours'\n    ) as NodeListOf<HTMLSpanElement>;\n    const minutes = document.querySelectorAll(\n      '.min'\n    ) as NodeListOf<HTMLSpanElement>;\n    const seconds = document.querySelectorAll(\n      '.sec'\n    ) as NodeListOf<HTMLSpanElement>;\n    const nextLanunchText = document.querySelector(\n      '.inner-counter p'\n    ) as HTMLParagraphElement;\n\n    setInterval(() => {\n      const today = new Date().getTime();\n\n      if (countDownDate > today) {\n        const timeRemaining = countDownDate - today;\n\n        let sec = Math.floor(timeRemaining / 1000);\n        let min = Math.floor(sec / 60);\n        let hours = Math.floor(min / 60);\n        let days = Math.floor(hours / 24);\n\n        hours %= 24;\n        min %= 60;\n        sec %= 60;\n\n        day.forEach((el) => (el.innerHTML = `${days}`));\n        hrs.forEach(\n          (el) => (el.innerHTML = `${hours < 10 ? '0' : ''} ${hours}`)\n        );\n        minutes.forEach(\n          (el) => (el.innerHTML = `${min < 10 ? '0' : ''} ${min}`)\n        );\n        seconds.forEach(\n          (el) => (el.innerHTML = `${sec < 10 ? '0' : ''} ${sec}`)\n        );\n      } else {\n        day.forEach((el) => (el.textContent = '00'));\n        hrs.forEach((el) => (el.textContent = '00'));\n        minutes.forEach((el) => (el.textContent = '00'));\n        seconds.forEach((el) => (el.textContent = '00'));\n        nextLanunchText.textContent = 'Launch has ended';\n      }\n    }, 1000);\n  };\n  const timer = sessionStorage.getItem(key);\n  if (!timer) {\n    fetchData(key, url)\n      .then((data) => {\n        updateEverySec(data);\n        currentSiteLocation(data);\n      })\n      .catch((e) => console.log(e));\n  } else {\n    updateEverySec(JSON.parse(timer));\n    currentSiteLocation(JSON.parse(timer));\n  }\n};\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$export","e","n","v","Object","defineProperty","get","enumerable","$parcel$modules","$parcel$bundles","parcelRequire","name","wrapper","module","require","err","Error","code","register","id","exports","registerBundle","fn","parcelRequireName","async","$4eac2c99294ebc5c1f6344e18d17ff7e$export$fetchData","key","url","response","fetch","ok","data","json","sessionStorage","setItem","JSON","stringify","status","$d0e410a6ac418c51e2cd758121ca92ef$export$currentSiteLocation","siteLocationFromApi","launch_site","site_id","document","querySelectorAll","forEach","location","parentElement","title","previousElementSibling","children","classList","add","countDownTimer","updateEverySec","nextDate","countDownDate","launch_date_unix","day","hrs","minutes","seconds","nextLanunchText","querySelector","setInterval","today","Date","getTime","timeRemaining","sec","Math","floor","min","hours","days","el","innerHTML","textContent","timer","getItem","parse","then","catch","console","log"],"version":3,"file":"rockets.b134b6cf.js.map"}