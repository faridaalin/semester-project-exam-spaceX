{"mappings":"gBAAIA,EACoB,oBAAfC,WACHA,WACgB,oBAATC,KACPA,KACkB,oBAAXC,OACPA,OACkB,oBAAXC,OACPA,OAAAA,GAWN,SAAAC,EAAwBC,EAAGC,EAAGC,GAC5BC,OAAOC,eAAeJ,EAAGC,EAAAA,CAAII,IAAKH,EAAGI,YAAY,8BCpB/CC,EAAAA,GACAC,EAAAA,GAEiB,MAAjBC,KACFA,EAAgB,SAASC,MAEnBA,KAAQF,EAAAA,KACNG,EAAUH,EAAgBE,UACvBF,EAAgBE,GACvBC,OAGED,KAAQH,SACHA,EAAgBG,MAKH,oBAAXE,QAAoD,mBAAnBA,OAAOC,eAC1CD,OAAOC,QAAQH,OAGpBI,EAAAA,IAAUC,MAAM,uBAAyBL,EAAO,WACpDI,EAAIE,KAAO,mBACLF,IAGMG,SAAW,SAAkBC,EAAIC,GAC7CZ,EAAgBW,GAAMC,GAGxBV,EAAcW,eAAiB,SAAwBF,EAAIG,GACzDb,EAAgBU,GAAMG,EACtBd,EAAgBW,GAAAA,IAGlBxB,EAAe4B,kBAAqBb,oDChChCc,EAAoB,CACxBC,EACAC,EACAC,WAEMC,EAAwCC,eAAeC,QAAQL,GAEhEG,EAgBHF,EAASK,KAAKC,MAAMJ,8BAbRK,SAASC,IAAAC,UAAgBV,EAAKE,GAElCM,EACFP,EAASO,eAEI,mDAERlB,kBACMA,GACTA,EAAAA,MAAAA,IAAeC,MAAAA,eAAqBD,gECvB1CqB,EAAS,KACbtC,OAAOuC,iBAAiB,QAAQ,KACfC,SAASC,cACtB,qBAEKC,WAAa","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@parcel/scope-hoisting/lib/prelude.js","./src/ts/lib/displayComponents.ts","./src/ts/lib/loader.ts"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","var $parcel$modules = {};\nvar $parcel$bundles = {};\n\nif (parcelRequire == null) {\n  parcelRequire = function(name) {\n    // Execute the bundle wrapper function if there is one registered.\n    if (name in $parcel$bundles) {\n      let wrapper = $parcel$bundles[name];\n      delete $parcel$bundles[name];\n      wrapper();\n    }\n\n    if (name in $parcel$modules) {\n      return $parcel$modules[name];\n    }\n\n    // Try the node require function if it exists.\n    // Do not use `require` to prevent Webpack from trying to bundle this call\n    if (typeof module !== 'undefined' && typeof module.require === 'function') {\n      return module.require(name);\n    }\n\n    var err = new Error(\"Cannot find module '\" + name + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, exports) {\n    $parcel$modules[id] = exports;\n  };\n\n  parcelRequire.registerBundle = function registerBundle(id, fn) {\n    $parcel$bundles[id] = fn;\n    $parcel$modules[id] = {};\n  };\n\n  $parcel$global[parcelRequireName] = parcelRequire;\n}\n","import { DocumentNode } from \"graphql\";\nimport { fetchData } from \"../utils/fetchData\";\nimport errorMessage from \"../utils/errorMessage\";\n\nconst displayComponents = (\n  key: string,\n  callback: Function,\n  query: DocumentNode\n) => {\n  const dataFromSessionStorage: string | null = sessionStorage.getItem(key);\n\n  if (!dataFromSessionStorage) {\n    (async () => {\n      try {\n        const { data } = await fetchData(key, query);\n\n        if (data) {\n          callback(data);\n        } else {\n          errorMessage(\"We have an error, please try again later.\");\n        }\n      } catch (err) {\n        errorMessage(err);\n        if (err) throw new Error(`HTTP error! ${err}`);\n      }\n    })();\n  } else {\n    callback(JSON.parse(dataFromSessionStorage));\n  }\n};\n\nexport default displayComponents;\n","const loader = () => {\n  window.addEventListener(\"load\", () => {\n    const loader = document.querySelector(\n      \".loader-container\"\n    ) as HTMLDivElement;\n    loader.className += \" hidden\";\n  });\n};\n\nexport default loader;\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$export","e","n","v","Object","defineProperty","get","enumerable","$parcel$modules","$parcel$bundles","parcelRequire","name","wrapper","module","require","err","Error","code","register","id","exports","registerBundle","fn","parcelRequireName","$91399d641dc09f0ef7a3705541b969af$export$default","key","callback","query","dataFromSessionStorage","sessionStorage","getItem","JSON","parse","data","$8322b51bc724fedaafbd91078b7f947c$init","fetchData","$92d97853dc84c470b86d94345c8c7199$export$default","addEventListener","document","querySelector","className"],"version":3,"file":"rockets.ff73e7b2.js.map"}